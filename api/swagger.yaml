swagger: '2.0'
info:
  version: '1.0.0'
  title: Task-Manager
host: localhost:9010
basePath: /api
consumes: [application/json]
produces: [application/json]
paths:
  /task:
    get:
      tags: [Get]
      summary: 'Get Tasks from database'
      description: 'It returns Task objects of task that are found in the mongodb database'
      operationId: Task
      responses:
        200:
          description: 'Successfully Found Tasks in Databases'
          schema:
            type: object
            properties:
              ID:
                type: string
                example: "64fe0c46464203251e7ad828"
              Description:
                type: string
                example: "Book a massage for Tuesday"
              DueDate:
                type: string
                example: "By Monday"
            required:
              - Description
              - DueDate
        400:
          description: Bad Request
        404:
          description: Task Not Found
        500:
          schema:
            type: string
          description: Server Error
  /task/{taskid}:
    get:
      tags: [Get Task By ID]
      summary: "Returns a Task by ID."
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
            format: string
            minimum: 1

      responses:
        200:
          description: Successfully found Task with id {taskId} in Database
        400:
          description: Bad request
        404:
          description: Task Not Found
        500:
          schema:
            type: string
          description: Server Error
    post:
      tags: [Create]
      summary: 'Create Task'
      description: 'Creates a tasks and inserts into mongodb Database'
      operationId: Task
      parameters:
        - name: Task
          in: body
          type: string
          required: true
          description: "json of task"
      responses:
        200:
          description: 'Successfully created Task'
          schema:
            type: object
            properties:
              ID:
                type: string
                example: "64fe0c46464203251e7ad828"
              Description:
                type: string
                example: 'Book a message for tuesday'
              DueDate:
                type: string
                example: "By sunday"
            required:
              - Description
              - DueDate
        400:
          description: Bad Request
        404:
          description: Task Not Found
    put:
      tags: [Edit]
      summary: 'Edit Task'
      description: 'edit any task by using task id'
      operationId: Task
      responses:
        200:
          description: 'Successfully edited Task'
          schema:
            type: object
            properties:
              ID:
                type: string
                example: "64fe0c46464203251e7ad828"
              Description:
                type: string
                example: 'Book a message for tuesday'
              DueDate:
                  type: string
                  example: "By sunday"
            required:
              - Description
              - DueDate
        400:
          description: Bad Request
        404:
          description: Task Not Found

